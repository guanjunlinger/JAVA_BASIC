亚历克斯和李用几堆石子在做游戏。偶数堆石子排成一行，每堆都有正整数颗石子 piles[i] 。

游戏以谁手中的石子最多来决出胜负。石子的总数是奇数，所以没有平局。

亚历克斯和李轮流进行，亚历克斯先开始。每回合，玩家从行的开始或结束处取走整堆石头。
这种情况一直持续到没有更多的石子堆为止，此时手中石子最多的玩家获胜。
假设亚历克斯和李都发挥出最佳水平，当亚历克斯赢得比赛时返回 true ，当李赢得比赛时返回 false 。
dp[i][j]:先手在i-j堆石子可以获取的最大得分
dp[i][j]=max(sum[i][j]-dp[i+1][j],sum[i][j]-dp[i][j-1])



亚历克斯和李继续他们的石子游戏。许多堆石子 排成一行，每堆都有正整数颗石子 piles[i]。游戏以谁手中的石子最多来决出胜负。
亚历克斯和李轮流进行，亚历克斯先开始。最初，M=1。
在每个玩家的回合中，该玩家可以拿走剩下的 前 X 堆的所有石子，其中 1<=X<=2M。然后，令 M=max(M,X)。
游戏一直持续到所有石子都被拿走。
假设亚历克斯和李都发挥出最佳水平，返回亚历克斯可以得到的最大数量的石头。
dp[i][j]:当只剩i-n堆,m=j时,先手获得最大石头数量

if(2*j>=n-i)
dp[i][j]=sum(piles[k])i<=k<=n-1
else
dp[i][j]=max(sum(piles[i],piles[i+1],,,piles[n-1]])-dp[i+k][max(k,j)]))1<=k<=2*j





