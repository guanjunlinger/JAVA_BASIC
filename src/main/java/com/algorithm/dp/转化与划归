给定一个整数数组nums ，你可以对它进行一些操作。
每次操作中，选择任意一个nums[i]，删除它并获得nums[i]的点数。之后，
你必须删除每个等于nums[i]- 1或nums[i] + 1的元素。
开始你拥有 0 个点数。返回你能通过这些操作获得的最大点数。

nums的长度最大为20000。
每个整数nums[i]的大小都在[1, 10000]范围内。

key
1.删除数字,意味着相邻数无法选择,与打家劫舍类似
2.删除某个数字,可以得到所有重复数字的得分
dp[i]:在1-i之间的数字选择,可以获得最大点数
dp[i] = max(dp[i-2]+nums[i]*频率,dp[i-3]+nums[i-1]*频率)



在一个大小在 (0, 0) 到 (N-1, N-1) 的2D网格 grid 中，除了在 mines 中给出的单元为 0，其他每个单元都是 1。网格中包含 1 的最大的轴对齐加号标志是多少阶？返回加号标志的阶数。如果未找到加号标志，则返回 0。

一个 k" 阶由 1 组成的“轴对称”加号标志具有中心网格  grid[x][y] = 1 ，以及4个从中心向上、向下、向左、向右延伸，长度为 k-1，由 1 组成的臂。下面给出 k" 阶“轴对称”加号标志的示例。注意，只有加号标志的所有网格要求为 1，别的网格可能为 0 也可能为 1。

key:结局暴力遍历的问题,利用四个方向的连续1的最长长度,简化对称的判断