给定一个整数数组nums ，你可以对它进行一些操作。
每次操作中，选择任意一个nums[i]，删除它并获得nums[i]的点数。之后，
你必须删除每个等于nums[i]-1或nums[i]+1的元素。
开始你拥有0个点数。返回你能通过这些操作获得的最大点数。

nums的长度最大为20000。
每个整数nums[i]的大小都在[1,10000]范围内。

思路:
1.删除数字,意味着相邻数无法选择,与打家劫舍类似
2.删除某个数字,可以得到所有重复数字的得分
dp[i]:在1-i之间的数字选择,可以获得最大点数
dp[i]=max(dp[i-2]+nums[i]*频率,dp[i-3]+nums[i-1]*频率)



给定三个字符串s1、s2、s3请你帮忙验证s3是否是由s1和s2交错组成的。
两个字符串s和t交错的定义与过程如下，其中每个字符串都会被分割
成若干非空子字符串：
s=s1+s2+...+sn
t=t1+t2+...+tm
|n-m|<=1
交错是s1+t1+s2+t2+s3+t3+...或者t1+s1+t2+s2+t3+s3+...

思路:
在(m+1,n+1)矩形地图中,每次向右走可以获得i处的字母,向下走可以获得j处的字母
从(1,1)到(m+1,n+1)可以获得(m+n)长的字符串。
等价于从(1,1)到(m+1,n+1)的路径能否组成s3串
dp[i][j] = s3[i+j-1]==s1[i]&&dp[i-1][j] || s3[i+j-1]==s2[j]&&dp[i][j-1]

