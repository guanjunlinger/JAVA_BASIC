爱丽丝和鲍勃一起玩游戏，他们轮流行动。爱丽丝先手开局。

最初，黑板上有一个数字 N 。在每个玩家的回合，玩家需要执行以下操作：

选出任一 x，满足 0 < x < N 且 N % x == 0 。
用 N - x 替换黑板上的数字 N 。
如果玩家无法执行这些操作，就会输掉游戏。

只有在爱丽丝在游戏中取得胜利时才返回 True，否则返回 false。假设两个玩家都以最佳状态参与游戏

dp[i] = 1:当前局面为i,先手赢
dp[i] = 0:当前局面为i,先手输

dp[i] = 1   if dp[i-j]==0 && i%j==0

数学:
  终止态:N=2,先手必赢
  先手奇数,必输(对手肯定是偶数)
  先手偶数,必赢(每次选1,对手肯定是奇数)




亚历克斯和李用几堆石子在做游戏。偶数堆石子排成一行，每堆都有正整数颗石子 piles[i] 。

游戏以谁手中的石子最多来决出胜负。石子的总数是奇数，所以没有平局。

亚历克斯和李轮流进行，亚历克斯先开始。 每回合，玩家从行的开始或结束处取走整堆石头。 这种情况一直持续到没有更多的石子堆为止，此时手中石子最多的玩家获胜。

假设亚历克斯和李都发挥出最佳水平，当亚历克斯赢得比赛时返回 true ，当李赢得比赛时返回 false 。


dp[i][j]:先手在i-j堆石子可以获取的最大得分

dp[i][j] =  max(piles[i]+sum[i][j]-dp[i+1][j],piles[j]+sum[i][j]-dp[i][j-1])

数学:
   只有两堆时,先手选最大值就获胜
   当有偶数堆时,直接选基数组和偶数组最大值,即可获胜



亚历克斯和李继续他们的石子游戏。许多堆石子 排成一行，每堆都有正整数颗石子 piles[i]。游戏以谁手中的石子最多来决出胜负。

亚历克斯和李轮流进行，亚历克斯先开始。最初，M = 1。

在每个玩家的回合中，该玩家可以拿走剩下的 前 X 堆的所有石子，其中 1 <= X <= 2M。然后，令 M = max(M, X)。

游戏一直持续到所有石子都被拿走。

假设亚历克斯和李都发挥出最佳水平，返回亚历克斯可以得到的最大数量的石头。

dp[i][j]:当只剩i-n堆,m=j时,先手获得最大石头数量

if(2*j>=n-i)
dp[i][j] = sum(piles[k])  i<=k<=n-1
else
dp[i][j] = max(sum(piles[i],piles[i+1],,,piles[n-1]])- dp[i+k][max(k,j)])) 1<=k<=2*j

