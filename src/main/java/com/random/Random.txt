1.Random
private final AtomicLong seed;
CAS操作保证原子性,多线程下竞争激烈



2.ThreadLocalRandom

探针哈希值生成器
private static final AtomicInteger probeGenerator =  new AtomicInteger();
探针哈希值偏移量
private static final int PROBE_INCREMENT = 0x9e3779b9;


种子生成器
private static final AtomicLong seeder = new AtomicLong(initialSeed());
种子值偏移量
private static final long SEEDER_INCREMENT = 0xbb67ae8584caa73bL;

线程共享的更新种子的偏移量
private static final long GAMMA = 0x9e3779b97f4a7c15L;










